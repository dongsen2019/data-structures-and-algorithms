#include <iostream>
#include <queue>
#include <functional>
#include <string>

using namespace std;

class Person
{
	private:
		string name;
		int age;
	public:
		Person(const string & s, int a) {
			name = s;
			age = a;
		}
		bool operator<(const Person & p) const {
			return name < p.name;
		}
		bool operator>(const Person & p) const {
			return name > p.name;
		}
		friend ostream & operator<<(ostream & os, const Person & p) {
			os << p.name << "," << p.age << endl;
		}	
};

int main(void)
{
	Person p[] = {Person("Gregg", 25), 
				  Person("Ann", 30),
				  Person("Bill",20) };
	priority_queue<Person> pqName1(p, p+3);
	priority_queue<Person, vector<Person>, greater<Person> > pqName2(p,p+3);
	while (!pqName1.empty())
	{
		cout << pqName1.top();
		pqName1.pop();
	}
	
	cout << endl;
	
	while (!pqName2.empty())
	{
		cout << pqName2.top();
		pqName2.pop();
	}
	return 0;
}
